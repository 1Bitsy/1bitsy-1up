#!/usr/bin/env python3

from itertools import groupby
import sys

from PIL import Image

white_pixel = 255

########################################################################
# General helper functions
########################################################################


def by_n(n, seq):
    return ((x for (i, x) in g)
            for (k, g) in groupby(enumerate(seq), lambda x: x[0] // n))


def pack_rgb565(tup):
    return (tup[0] >> 3 << 11 |
            tup[1] >> 2 << 5 |
            tup[2] >> 3 << 0)

########################################################################
# Tilesheet
########################################################################

ts_path = 'tilesheet.png'
ts_img = Image.open(ts_path)
ts_img = ts_img.convert("RGBA")
ts_pix = ts_img.load()
ts_w, ts_h = ts_img.size

ts_packed = [[pack_rgb565(ts_pix[x, y])
              for x in range(ts_w)]
             for y in range(ts_h)]

ts_bytes = ',\n'.join('    {{ {} }}'
                      .format(',\n      '.join(', '.join('{:3d}'.format(b)
                                                         for b in line)
                                               for line in by_n(8, row)))
                      for row in ts_packed)

ts_template = '''
#define TS_PIXMAP_HEIGHT {h}
#define TS_PIXMAP_WIDTH {w}

static const uint16_t ts_pixmap[TS_PIXMAP_HEIGHT][TS_PIXMAP_WIDTH] = {{
{bytes}
}};'''.lstrip()

ts_def = ts_template.format(h=ts_h, w=ts_w, bytes=ts_bytes)


########################################################################

template = '''
#ifndef ASSETS_H
#define ASSETS_H

/* This file was automatically generated by {program}.  Do not edit. */

#include <stdint.h>

{ts_def}

#endif /* ASSETS_H */
'''.lstrip()


def format_map(index, name):
    pixels = reg_data[index]
    s = ',\n'.join('    {{ {} }}'
                   .format(',\n      '.join(', '.join('{:3d}'.format(b)
                                                     for b in line)
                                           for line in by_n(12, row)))
                   for row in pixels)
    return pixmap_template.format(name=name,
                                  height=region_height,
                                  width=region_width,
                                  bytes=s)

print(template.format(program=sys.argv[0],
                      ts_def=ts_def))
